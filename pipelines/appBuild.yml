# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main
- develop

pool:
  vmImage: ubuntu-latest

steps:

# checking the java version
#- script: | 
#          mvn -version
#          echo $JAVA_HOME
#          java -version
#  name: versionCheck

#- task: SonarQubePrepare@5
#  inputs:
#    SonarQube: 'SonarQube_boga-vm'
#    scannerMode: 'Other'
#    extraProperties: |
#      # Additional properties that will be passed to the scanner, 
#      # Put one key=value per line, example:
#      # sonar.exclusions=**/*.bin
#      sonar.projectKey=Java_PetClinicApp

- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'SonarQube_boga-vm'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'Java_PetClinicApp'
    cliProjectName: 'Java_PetClinicApp'
    cliSources: '.'
    extraProperties: |
      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      #sonar.projectKey=Java_PetClinicApp

- task: JavaToolInstaller@0
  name: java17InstallTask
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- task: Maven@4
  inputs:
    mavenPomFile: 'code/pom.xml'
    goals: 'clean install package sonar:sonar'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.17'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'pom'

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'